{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_snowflake_stage_spl",
						"type": "DatasetReference"
					},
					"name": "sourceStg"
				},
				{
					"name": "sourceBreedDim",
					"description": "Import data from ds_Edw_Breed_Dim"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "sourcedatawithsk",
					"description": "Custom (cross) join on 'sourceStg' and \n'sourceBreedDim'"
				},
				{
					"name": "aggregatebreedkeys",
					"description": "Aggregating data by 'SPECIES', PRIMARY_BREED, SECONDARY_BREED, MAXBREEDSK' producing columns"
				},
				{
					"name": "surrogateKey1",
					"description": "Adding new key RowNum starting from 1 with step 1"
				},
				{
					"name": "derivedColumn1",
					"description": "Creating/updating the columns \n'SPECIES, PRIMARY_BREED, SECONDARY_BREED, MAXBREEDSK\n"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LICENSE_ISSUE_DATE as string,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_CREATED_DATE as string,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     format: 'table') ~> sourceStg",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> sourceBreedDim",
				"sourceStg, sourceBreedDim join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> sourcedatawithsk",
				"sourcedatawithsk aggregate(groupBy({} = ERROR_FUNCTION(''),",
				"          {} = ERROR_FUNCTION('')),",
				"     COUNT_ROW = count(LICENSE_NUMBER)) ~> aggregatebreedkeys",
				"aggregatebreedkeys keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(BREED_SK = MAXBREEDSK + RowNum,",
				"          DI_CREATED_DT = toString(currentDate(),'yyyy-MM-dd'),",
				"          DI_JOB_ID = $DI_JOB_ID) ~> derivedColumn1"
			]
		}
	}
}